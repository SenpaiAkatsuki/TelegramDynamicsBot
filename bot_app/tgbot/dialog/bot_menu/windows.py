from aiogram_dialog import Window
from aiogram_dialog.api.entities import MediaAttachment
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.kbd import Button, Back, Row, SwitchTo, Cancel, Group, NumberedPager, PrevPage, NextPage, \
    CurrentPage
from aiogram_dialog.widgets.media import DynamicMedia
from aiogram_dialog.widgets.text import Const, Format, Multi

from tgbot.dialog.bot_menu import getters, keyboards, selected
from tgbot.dialog.bot_menu.selected import on_confirm_add_notification
from tgbot.dialog.bot_menu.states import MainMenu, GroupManagementAddGroup, \
    GroupManagement, GroupManagementGroupSettings, NotificationManagement, ControlPanel, AllInWork
from tgbot.misc.widgets import ScrollingText


def main_menu_window():
    return Window(
        Const('–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'),
        keyboards.main_menu(),
        state=MainMenu.select_category,
    )


def manage_groups_select_option():
    return Window(
        Const('üë• –ö–µ—Ä—É–≤–∞–Ω–Ω—è –≥—Ä—É–ø–∞–º–∏'),
        keyboards.group_management(),
        Cancel(Const('<< –ù–∞–∑–∞–¥'),
               id='cancel_to_main_menu', ),
        state=GroupManagement.group_management
    )


def scrolling_statuses():
    return Window(
        Const('üì© –°—Ç–∞—Ç—É—Å–∏ —Ä–æ–∑—Å–∏–ª–æ–∫'),
        ScrollingText(
            Format('{notification_statuses}'),
            id='scrolling_statuses',
            when='notification_statuses',
            page_size=40,
        ),
        Row(
            PrevPage(scroll="scrolling_statuses"),
            CurrentPage(scroll="scrolling_statuses"),
            NextPage(scroll="scrolling_statuses"),
        ),
        Cancel(Const('<< –ù–∞–∑–∞–¥')),
        state=selected.NotificationStatus.show_notification,
        getter=getters.get_notifications,
        disable_web_page_preview=True,
    )


def choose_group():
    return Window(
        Const('üîß –û–±–µ—Ä—ñ—Ç—å –≥—Ä—É–ø–ø—É'),
        keyboards.choose_group(),
        Cancel(Const('<< –ù–∞–∑–∞–¥'),
               id='ccl_to_gr_mae_frm_segs_TST',
               ),
        state=GroupManagementGroupSettings.group_settings,
        getter=getters.get_groups
    )


def select_scheduled_time():
    return Window(
        Multi(
            Const('‚è∞ –ó–∞–¥–∞–π—Ç–µ —á–∞—Å –ø–æ—Å—Ç–∏–Ω–≥—É —É —Ñ–æ—Ä–º–∞—Ç—ñ: 00:00'),
            Format('{group_settings}', when='group_settings'),
        ),
        TextInput(id='enter_schedule_time',
                  on_success=selected.on_enter_schedule_time),
        SwitchTo(
            Const('üóë –í–∏–ª—É—á–∏—Ç–∏ –≥—Ä—É–ø—É'),
            id='delete_group',
            state=GroupManagementGroupSettings.delete_group,
        ),
        Back(Const('<< –ù–∞–∑–∞–¥')),
        state=GroupManagementGroupSettings.group_scheduled_time,
        getter=getters.get_group_settings
    )


def confirm_delete_group():
    return Window(
        Const('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–ª—É—á–∏—Ç–∏ –≥—Ä—É–ø—É?'),
        Button(Const('–¢–∞–∫'),
               id='confirm_delete_group',
               on_click=selected.on_confirm_delete_group),

        SwitchTo(Const('<< –ù–∞–∑–∞–¥'),
                 id='back_to_group_settings',
                 state=GroupManagementGroupSettings.group_scheduled_time),
        state=GroupManagementGroupSettings.delete_group,
    )


def select_scheduled_period():
    return Window(
        Format('‚è∞ –ß–∞—Å –ø–æ—Å—Ç–∏–Ω–≥—É <b>{schedule_time}</b> –¥–ª—è –≥—Ä—É–ø–∏ <b>{group_name}</b>\n'
               'üîÅ –≤–∏–±–µ—Ä—ñ—Ç—å –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—ñ—Å—Ç—å –ø–æ—Å—Ç–∏–Ω–≥—É'),
        keyboards.choose_scheduled_period(),
        Back(Const('<< –ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –≥—Ä—É–ø')),
        state=GroupManagementGroupSettings.group_scheduled_period,
        getter=getters.get_schedule_time
    )


def select_scheduled_custom_period():
    return Window(
        Const('üîÅ –í–≤–µ–¥—ñ—Ç—å –ø–µ—Ä—ñ–æ–¥–∏—á–Ω—ñ—Å—Ç—å –ø–æ—Å—Ç–∏–Ω–≥—É —É —Ñ–æ—Ä–º–∞—Ç—ñ: 00/00'),
        TextInput(id='enter_schedule_custom_period',
                  on_success=selected.on_enter_schedule_custom_period),
        SwitchTo(Const('<< –ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –≥—Ä—É–ø'),
                 id='cancel_from_custom_period',
                 state=GroupManagementGroupSettings.group_settings),
        state=GroupManagementGroupSettings.group_custom_scheduled_period
    )


def select_scheduled_custom_period_exception():
    return Window(
        Const('–°—Ö–æ–∂–µ —â–æ –≤–∏ –≤–≤–µ–ª–∏ –Ω–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—Å—Ç—ñ –ø–æ—Å—Ç–∏–Ω–≥—É, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑'),
        TextInput(id='enter_schedule_custom_period_error',
                  on_success=selected.on_enter_schedule_custom_period),
        SwitchTo(Const('<< –ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É –≥—Ä—É–ø'),
                 id='cancel_to_group_manage_from_settings',
                 state=GroupManagementGroupSettings.group_settings),
        state=GroupManagementGroupSettings.group_custom_scheduled_period_exception
    )


def group_scheduled_complete():
    return Window(
        Const('–ì–æ—Ç–æ–≤–æ!'),
        Cancel(Const('<< –ù–∞–∑–∞–¥'),
               id='ccl_to_gr_mae_frm_segs_TST',
               ),
        state=GroupManagementGroupSettings.group_scheduled_complete
    )


def get_new_group():
    return Window(
        Const("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –±–æ—Ç—É <b>ID</b> –≥—Ä—É–ø–∏"),
        TextInput(id='enter_group_name',
                  on_success=selected.on_enter_group_id),
        Cancel(Const('<< –ù–∞–∑–∞–¥'),
               id='cancel_to_group_manage_from_add_group',
               ),
        state=GroupManagementAddGroup.add_group,
    )


def enter_group_name():
    return Window(
        Const("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ <b>–ù–∞–∑–≤—É</b> –≥—Ä—É–ø–∏"),
        TextInput(id='enter_group_name',
                  on_success=selected.on_enter_group_name),
        SwitchTo(Const('<< –ù–∞–∑–∞–¥'),
                 id='cancel_to_group_manage_from_add_group',
                 state=GroupManagementAddGroup.add_group,
                 ),
        state=GroupManagementAddGroup.enter_group_name,
    )


def confirm_new_group():
    return Window(
        Format('''
–ì—Ä—É–ø–∞ {group_name} –¥–æ–¥–∞–Ω–∞ –¥–æ —Å–ø–∏—Å–∫—É –≥—Ä—É–ø–ø
        '''),
        Cancel(Const('<< –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é'),
               id='cancel_to_menu_groups',
               ),
        state=GroupManagementAddGroup.confirm_group,
        getter=getters.get_group_name,
    )


# =============================================== #


def get_notification():
    return Window(
        Const('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'),
        Group(
            Button(Const('üìÇ –®–∞–±–ª–æ–Ω–∏'), id='preset_settings',
                   on_click=selected.on_choose_template_from_notification_management),
            Button(Const('–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'), id='add_notification', on_click=selected.on_add_notification),
        ),
        Cancel(Const('<< –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é'),
               id='cancel_to_group_manage_from_notification',
               ),
        state=NotificationManagement.notification_management
    )


def add_notification():
    return Window(
        Const('–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –±–æ—Ç—É —Ç–µ —â–æ –±–∞–∂–∞—î—Ç–µ –æ–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ (–≥–æ—Ç–æ–≤–∏–π –º–µ—Å—Å–µ–¥–∂ –∑ —Ñ–æ—Ç–æ –∞–±–æ –±–µ–∑)'),
        MessageInput(on_confirm_add_notification),
        Back(Const('<< –ù–∞–∑–∞–¥')),
        state=NotificationManagement.add_notification,
    )


def enter_name_for_template():
    return Window(
        Const('üìã‚úçÔ∏è –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —à–∞–±–ª–æ–Ω—É, –∞–±–æ –æ–±–µ—Ä—ñ—Ç—å –∑—ñ —Å–ø–∏—Å–∫—É, —â–æ–± –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç–∏'),
        keyboards.choose_template(),
        TextInput(id='enter_name_for_template',
                  on_success=selected.on_enter_name_template),
        Back(Const('<< –ù–∞–∑–∞–¥')),
        state=NotificationManagement.enter_name_for_template,
        getter=getters.get_templates
    )


def choose_template():
    return Window(
        Const('–û–±–µ—Ä—ñ—Ç—å —à–∞–±–ª–æ–Ω'),
        keyboards.choose_template(),
        SwitchTo(Const('¬´ –ù–∞–∑–∞–¥'),
                 id='cancel_to_notification_from_choose_template',
                 state=NotificationManagement.notification_management),
        state=NotificationManagement.choose_template,
        getter=getters.get_templates
    )


def choose_group_for_notification():
    return Window(
        Multi(
            Format('{template_text}'),
            Const('üì¢–û–±–µ—Ä—ñ—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ—Å—Ç—ñ–Ω–≥—É'),
            sep='\n\n'
        ),
        DynamicMedia(
            selector='photo',
            when='photo'
        ),
        keyboards.choose_group_for_notification(),
        SwitchTo(
            Const('üóë –í–∏–ª—É—á–∏—Ç–∏ —à–∞–±–ª–æ–Ω'),
            id='delete_template',
            state=NotificationManagement.delete_template
        ),
        SwitchTo(
            Const('¬´ –ù–∞–∑–∞–¥ –¥–æ —à–∞–±–ª–æ–Ω—ñ–≤'),
            id='back_to_templates',
            state=NotificationManagement.choose_template
        ),
        SwitchTo(Const('<< –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é'),
                 id='ccl_to_ntf_from_chse_gp',
                 state=NotificationManagement.notification_management),

        state=NotificationManagement.choose_group_for_notification,
        disable_web_page_preview=True,
        getter=(
            getters.get_groups,
            getters.get_template_info
        )
    )


def confirm_delete_template():
    return Window(
        Const('–í–∏–¥–∞–ª–∏—Ç–∏ —à–∞–±–ª–æ–Ω?'),
        Button(Const('–¢–∞–∫'),
               id='confirm_delete_template',
               on_click=selected.on_confirm_delete_template),
        SwitchTo(Const('–ù—ñ'),
                 id='cancel_delete_template',
                 state=NotificationManagement.choose_group_for_notification),
        state=NotificationManagement.delete_template
    )


def choose_notification_options():
    return Window(
        Const('–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—ó –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏'),
        Button(Const('üöÄ –°—Ç–∞—Ä—Ç –∑–∞—Ä–∞–∑!'),
               id='start_now',
               on_click=selected.on_start_posting_message),
        Button(Const('üï∞Ô∏è –ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—É'),
               id='start',
               on_click=selected.on_start_posting_message),
        Button(Const('‚è∏Ô∏è –ü–∞—É–∑–∞'),
               id='pause',
               on_click=selected.on_start_posting_message),
        Button(Const('‚õîÔ∏è –°—Ç–æ–ø'),
               id='stop',
               on_click=selected.on_start_posting_message),
        Back(Const('<< –ù–∞–∑–∞–¥')),
        state=NotificationManagement.choose_notification_options,
    )


def choose_group_for_notification_exception():
    return Window(
        Const('–°—Ö–æ–∂–µ —É –≤–∞—Å –Ω–µ–º–∞—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –¥–ª—è —Ü—ñ—î—ó –≥—Ä—É–ø–∏\n\n'
              '–û–±–µ—Ä—ñ—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ—Å—Ç—ñ–Ω–≥—É'),
        keyboards.choose_group_for_notification(),
        Cancel(Const('<< –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≥—Ä—É–ø'),
               id='cl_to_non_fm_cse_gup'),
        SwitchTo(Const('<< –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é'),
                 id='cel_to_noion_fm_cse_grp',
                 state=NotificationManagement.notification_management),
        state=NotificationManagement.choose_group_for_notification_exceptiom,
        getter=getters.get_groups
    )


def notification_complete():
    return Window(
        Const('–ì–æ—Ç–æ–≤–æ!'),
        SwitchTo(Const('<< –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é'),
                 id='cancel_to_notification_from_choose_group',
                 state=NotificationManagement.notification_management),
        state=NotificationManagement.notification_complete,
    )


# =================== #

def control_panel():
    return Window(
        Const('–ü–∞–Ω–µ–ª—å –∫–µ—Ä—É–≤–∞–Ω–Ω—è'),
        SwitchTo(Const('üíº –í—Å—ñ –≤ —Ä–æ–±–æ—Ç—ñ'),
                 id='all_in_work',
                 state=ControlPanel.control_option_all_in_bot),
        Row(
            Button(Const('‚õîÔ∏è –í—Å—ñ —Å—Ç–æ–ø'),
                   id='all_stop',
                   on_click=selected.on_select_control_option),
            Button(Const('üöÄ –í—Å—ñ —Å—Ç–∞—Ä—Ç'),
                   id='all_start',
                   on_click=selected.on_select_control_option),
        ),
        Cancel(Const('<< –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é'),
               id='cel_to_mu_fm_crl_pal', ),
        state=ControlPanel.control_panel,
    )


def control_option_set():
    return Window(
        Const('–ì–æ—Ç–æ–≤–æ!'),
        SwitchTo(Const('<< –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é'),
                 id='cl_to_mu_fom_cl_oon_st',
                 state=ControlPanel.control_panel),
        state=ControlPanel.control_option_set,
    )


def control_option_all_in_bot():
    return Window(
        Const('–ì—Ä—É–ø–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å'),
        keyboards.templates_from_scheduled_messages(),

        SwitchTo(Const('<< –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é'),
                 id='cl_to_mu_from_ctl_opn_all',
                 state=ControlPanel.control_panel),
        state=ControlPanel.control_option_all_in_bot,
        getter=getters.get_templates_from_scheduled_messages
    )


def all_in_bot_template_info():
    return Window(
        DynamicMedia(
            selector='template_photo',
            when='template_photo'
        ),
        Multi(
            Format('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —à–∞–±–ª–æ–Ω: "{template_name}"'),
            Format('–¢–µ–∫—Å—Ç: "{template_text}"'),
            ScrollingText(
                Format('{statuses}'),
                id='all_in_work_scroll',
                page_size=15,
            ),
            sep='\n\n'
        ),
        Row(
            PrevPage(scroll="all_in_work_scroll"),
            CurrentPage(scroll="all_in_work_scroll"),
            NextPage(scroll="all_in_work_scroll"),
        ),
        Cancel(Const('<< –ù–∞–∑–∞–¥ –¥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å'),
               id='cel_to_mu_fr_all_in_bt_tte_io',
               ),
        state=AllInWork.show_statuses,
        getter=getters.get_info_from_template,
        disable_web_page_preview=True
    )
